var LiteObservable=(function(exports){'use strict';function emptyCleanup(){}
class LiteObservable{constructor(subscriber){this._subscriber=subscriber}
subscribe(next,error,complete){const recognizeNext=typeof next==="function";const recognizeError=typeof error==="function";const recognizeComplete=typeof complete==="function";let closedState=!1;let cleanup=emptyCleanup;let subscriber=this._subscriber;if(typeof subscriber==="function"){try{cleanup=subscriber(x=>{if(!closedState&&recognizeNext){next(x)}},e=>{if(!closedState){closedState=!0;if(recognizeError){error(e)}
cleanup()}},()=>{if(!closedState){closedState=!0;if(recognizeComplete){complete()}
cleanup()}},()=>closedState);cleanup=typeof cleanup==="function"?cleanup:emptyCleanup}catch(e){closedState=!0;if(recognizeError){error(e)}}}
return()=>{closedState=!0;cleanup()}}}
exports.LiteObservable=LiteObservable;return exports}({}))